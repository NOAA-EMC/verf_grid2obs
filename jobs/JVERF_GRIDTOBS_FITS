#!/bin/ksh

########################################
# Preliminary data setup step
########################################
set -xa

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$
export jobid=${jobid:-${job}.$LSB_JOBID}
export DATA_IN=${DATA_IN:-$DATAROOT}
export DATA=$DATA_IN/${jobid}

rm -rf $DATA
mkdir -p $DATA
cd $DATA 
####################################
# File To Log Msgs
####################################
##export jlogfile=${jlogfile:-${DATA}/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z 

###############################
# Specify NET and RUN name
###############################
export NET=${NET:-verf}
export RUN=${RUN:-gridtobs}

##################################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# SENDECF  - Flag Events on ecFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
##################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
 
export DCOMROOT=${DCOMROOT:-/lfs/h1/ops/$envir/dcom}
export HOMEverf_gridtobs=${HOMEverf_gridtobs:-${NWROOT}/verf_gridtobs.${model_ver}}
export EXECverf_gridtobs=${EXECverf_gridtobs:-$HOMEverf_gridtobs/exec}
export FIXverf_gridtobs=${FIXverf_gridtobs:-$HOMEverf_gridtobs/fix}
export PARMverf_gridtobs=${PARMverf_gridtobs:-$HOMEverf_gridtobs/parm}
export USHverf_gridtobs=${USHverf_gridtobs:-$HOMEverf_gridtobs/ush}

# JY - set the following for dumpjb call
export HOMEobsproc_dump=${HOMEobsproc_dump:-$NWROOT/obsproc_dump.${obsproc_dump_ver}}
export USHobsproc_dump=${USHobsproc_dump:-${HOMEobsproc_dump}/ush}
export HOMEobsproc_shared_bufr_dumplist=${HOMEobsproc_shared_bufr_dumplist:-$NWROOT/obsproc_shared/bufr_dumplist.${obsproc_shared_bufr_dumplist_ver}}

# Run setpdy and initialize PDY variables
setpdy.sh
. PDY

export vday=$PDYm1

if [ $model = "aqm" -o $model = "aqm1" -o $model = "aqmmax" -o $model = "pm" -o $model = "pmmax" -o $model = "pm1" -o $model = "pmmax1" -o $model = "aqmmax1" ]
then
   vday=$PDYm2
fi

# Define COMIN/COMOUT variables:
export INDIR=${INDIR:-$(compath.py ${NET}/${VER}/${RUN}}

if [ $model = srefens -o $model = srefensx ]; then
  export COM_IN=$COMROOT/verf/${envir}
else
  export COM_IN=${COM_IN:-$(compath.py verf/${verf_ver})}
fi

export COM_OUT=${COM_OUT:-$(compath.py verf/${verf_ver})}
export COMIN=$COM_IN/gridtobs.$vday
export COMOUT=$COM_OUT/gridtobs.$vday
export COMVSDB=${COMVSDB:-$(compath.py verf/${verf_ver}/vsdb/gridtobs)}

export COMG=${COMG:-$(compath.py gfs/${gfs_ver}/gfs)}
export COMN=${COMN:-$(compath.py nam/${nam_ver}/nam)}
export COMR=${COMR:-$(compath.py rtma/${rtma_ver}/rtma)}

# Define the directory where the PREPBUFR file comes from:
export COMBUFR=${COMBUFR:-$(compath.py hourly/${hourly_ver})}

mkdir -p -m 775 $COMVSDB
mkdir -p -m 750 $COMOUT
chgrp rstprod $COMOUT


#######################################################################
# Execute the script.
if [ $model = srefens -o $model = srefensx ]
then
  export vdate=${vday}${cyc}
  export vcyc=$cyc
  export inc=06
  export frange=87
  $USHverf_gridtobs/verf_gridtobs_ens_sref.sh $model
elif [ $model = sref2ens ]
then
  export vdate=${vday}${cyc}
  export vcyc=$cyc
  export inc=06
  export frange=87
  sh $USHverf_gridtobs/verf_gridtobs_ens_sref.sh_test $model
elif [ $model = "aqmmax" -o $model = "pmmax" -o $model = pmmax1 -o $model = "aqmmax1" ]
then
  export vcyc=$cyc
  export vdate=$vday$vcyc
  $USHverf_gridtobs/verf_gridtobs_aqmmax.sh $model $bc
else
   . $HOMEverf_gridtobs/scripts/exverf_gridtobs_fits.sh $vday $model 
fi

cat $pgmout

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$msg"

cd $DATA_IN
if [ "$KEEPDATA" != "YES" ] ; then
  rm -rf $DATA
fi

date
